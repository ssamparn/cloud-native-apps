# To initialize data into mongo container, we are creating a k8s configMap and inject candidate-init.js and job-init.js as file
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-data-init-js
data:
  job-init.js: |
    db = db.getSiblingDB('job');
    db.createUser({
      user: "job_user",
      pwd: "job_password",
      roles:[
        {
            role: "readWrite",
            db: "job"
        }
      ]
    });
    db.createCollection('job');
    db.job.insertMany(
      [
        {
          description: "senior java dev",
          company: "amazon",
          skills: [ "java", "spring", "docker" ],
          salary: 100000,
          isRemote: false
        },
        {
          description: "junior java dev",
          company: "apple",
          skills: [ "java" ],
          salary: 50000,
          isRemote: false
        },
        {
          description: "scrum master",
          company: "google",
          skills: [ "agile", "jira" ],
          salary: 60000,
          isRemote: true
        },
        {
          description: "director of engg",
          company: "microsoft",
          skills: [ "java", "jira", "project" ],
          salary: 150000,
          isRemote: true
        }
      ]
    );

  candidate-init.js: |
    db = db.getSiblingDB('candidate');
    db.createUser({
      user: 'candidate_user',
      pwd: 'candidate_password',
      roles:[
        {
          role: 'readWrite',
          db: 'candidate'
        }
      ]
    });
    db.createCollection('candidate');
    db.candidate.insertMany(
      [
        {
          _id: '1',
          name: 'sam',
          skills: [ 'java', 'spring' ]
        },
        {
          _id: '2',
          name: 'jake',
          skills: [ 'docker' ]
        },
        {
          _id: '3',
          name: 'mike',
          skills: [ 'jira' ]
        }
      ]
    );